import React, { useState } from 'react';

// --- SVG Icons ---
// Using inline SVGs to avoid external dependencies

const PencilIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2.5" strokeLinecap="round" strokeLinejoin="round">
    <path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
  </svg>
);

const LightbulbIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
    <path d="M15.09 16.05C15.03 15.5 15 14.76 15 14a3 3 0 0 1 3-3c.76 0 1.5.03 2.05.09"></path>
    <path d="M12 13a1 1 0 0 1 1 1v.01a1 1 0 0 1-1 1H10a1 1 0 0 1-1-1v-.01a1 1 0 0 1 1-1z"></path>
    <path d="M8.5 18.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"></path>
    <path d="M14 2c-3.1 0-5.5 2.5-5.5 5.5C8.5 10.9 11.9 14 14 14c3.1 0 5.5-2.5 5.5-5.5C19.5 4.5 17.1 2 14 2Z"></path>
    <path d="M9 11.05C8.69 11.02 8.36 11 8 11c-3.1 0-5.5 2.5-5.5 5.5C2.5 19.9 5.9 23 8 23c3.1 0 5.5-2.5 5.5-5.5A5.5 5.5 0 0 0 9 11.05Z"></path>
  </svg>
);

const PaperPlaneIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
    <line x1="22" y1="2" x2="11" y2="13"></line>
    <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
  </svg>
);

const SparkleIcon = () => (
  <svg className="w-full h-full" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round">
    <path d="M12 3v.01M12 21v.01M3 12h.01M21 12h.01M5.64 5.64l.01.01M18.36 18.36l.01.01M5.64 18.36l.01-.01M18.36 5.64l.01-.01" />
  </svg>
);


// --- Components ---

function Header() {
  return (
    <nav className="flex justify-between items-center px-8 py-3 bg-gradient-to-r from-blue-900 to-indigo-900 text-white shadow-lg">
      <div className="flex items-center gap-6">
        <a href="#" className="font-medium text-lg">Forum</a>
        <a href="#" className="flex items-center gap-1.5 text-sm font-medium text-gray-200 hover:text-white transition-colors">
          <PencilIcon />
          Create Post
        </a>
      </div>
      <div className="flex items-center gap-4">
        <span className="font-semibold text-sm">Mimansa1176</span>
        <a href="#" className="text-sm text-gray-300 hover:text-white transition-colors">Logout</a>
      </div>
    </nav>
  );
}

function PostCard() {
  return (
    <div className="bg-white rounded-xl shadow-lg p-6 border-l-4 border-orange-400">
      <h1 className="text-3xl font-bold text-gray-800">Image Upload Testing</h1>
      <p className="text-sm text-gray-600 mt-1">By Nikhil1176</p>
    </div>
  );
}

function CommentsDisplayCard() {
  // This component is static as per the image
  return (
    <div className="bg-white rounded-xl shadow-lg p-6">
      <h2 className="text-xl font-semibold text-gray-800 mb-4">Comments</h2>
      <p className="text-gray-500 italic text-sm">No comments yet. Be the first!</p>
      
      {/* This is the disabled-looking input from the image */}
      <div className="mt-4 bg-gray-100 border border-gray-200 rounded-lg px-4 py-3 text-gray-400 text-sm">
        Write a comment...
      </div>
    </div>
  );
}

function NewCommentCard() {
  const [comment, setComment] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!comment.trim()) return;
    // In a real app, you would submit the comment here
    console.log("Submitting comment:", comment);
    setComment("");
    // alert("Comment posted!"); // Don't use alert()
  };

  return (
    <div className="bg-white rounded-xl shadow-lg p-6 border-l-4 border-blue-500">
      <div className="flex items-center gap-2 font-semibold text-blue-800 mb-4">
        <LightbulbIcon />
        <span>Be the first to share your thoughts!</span>
      </div>
      <form onSubmit={handleSubmit}>
        <textarea
          value={comment}
          onChange={(e) => setComment(e.target.value)}
          placeholder="Write your comment here..."
          className="w-full h-24 p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:outline-none"
        />
        <button
          type="submit"
          className="flex items-center gap-2 px-5 py-2 mt-3 text-white font-semibold rounded-lg bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 shadow-md hover:shadow-lg transition-all transform hover:-translate-y-0.5"
        >
          <span>Post Comment</span>
          <PaperPlaneIcon />
        </button>
      </form>
    </div>
  );
}

// --- Main App Component ---

export default function App() {
  return (
    // Set font-sans as the default font for the whole app
    <div className="font-sans min-h-screen relative overflow-hidden bg-gradient-to-br from-blue-200 via-cyan-100 to-purple-200">
      <Header />

      <main className="max-w-3xl mx-auto p-4 md:p-8 space-y-6">
        <PostCard />
        <CommentsDisplayCard />
        <NewCommentCard />
      </main>

      {/* Sparkle decorative element from the image */}
      <div className="absolute bottom-8 right-12 w-10 h-10 text-white opacity-70 animate-pulse">
        <SparkleIcon />
      </div>
    </div>
  );
}
